/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package proyecto.vistas;

import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto.conexion.TratamientoData;
import proyecto.conexion.VisitaData;
import proyecto.entidades.Cliente;
import proyecto.entidades.Tratamiento;

/**
 *
 * @author piry
 */
public class ListaDeTratamientosVista extends javax.swing.JInternalFrame {
private DefaultTableModel modelo = new DefaultTableModel();
private Cliente cliente;
    /**
     * Creates new form ListasDeTratamientosVista
     */
    public ListaDeTratamientosVista(Cliente cliente1) {
        cliente = cliente1;
        initComponents();
        armarCabecera();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        buscador = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTratamiento = new javax.swing.JTable();
        elegir = new javax.swing.JButton();
        crearTratamiento = new javax.swing.JButton();

        jLabel1.setText("BUSCAR POR NOMBRE:");

        buscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscadorKeyReleased(evt);
            }
        });

        tablaTratamiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaTratamiento);

        elegir.setText("ELEGIR Y GUARDAR");
        elegir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elegirActionPerformed(evt);
            }
        });

        crearTratamiento.setText("CREAR TRATAMIENTO");

        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(buscador, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(elegir, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(crearTratamiento, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(buscador)
                .addContainerGap())
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(elegir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(crearTratamiento)
                .addGap(90, 90, 90))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(buscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elegir)
                    .addComponent(crearTratamiento))
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscadorKeyReleased
        // TODO add your handling code here:
        TratamientoData tratamientoData = new TratamientoData();
        for (Tratamiento tratamiento : tratamientoData.listarTratamiento()) {
            if(tratamiento.getDescripcion().startsWith(buscador.getText())){
                modelo.addColumn(new Object []{
                    tratamiento.getTipo(),
                    tratamiento.getDescripcion(),
                    tratamiento.getImporte(),
                    tratamiento.isActivo()
                });
            }
        }
    }//GEN-LAST:event_buscadorKeyReleased

    private void elegirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elegirActionPerformed
        // TODO add your handling code here:
        VisitaData visitaData = new VisitaData();
        int filaSeleccionada = tablaTratamiento.getSelectedRow();

        if (filaSeleccionada != -1) {
            String tipo = tablaTratamiento.getValueAt(filaSeleccionada, 0).toString(); 
            String descripcion = tablaTratamiento.getValueAt(filaSeleccionada, 1).toString(); 
            double importe = Double.parseDouble(tablaTratamiento.getValueAt(filaSeleccionada, 2).toString()); 
            boolean activo = (boolean) tablaTratamiento.getValueAt(filaSeleccionada, 3); 

            Tratamiento tratamiento = new Tratamiento(tipo, descripcion, importe, activo);

        } else {
            // El usuario no ha seleccionado ninguna fila.
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila de la tabla.");
        }
    }//GEN-LAST:event_elegirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buscador;
    private javax.swing.JButton crearTratamiento;
    private javax.swing.JButton elegir;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaTratamiento;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera(){
        modelo.addColumn("Tipo");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Importe");
        modelo.addColumn("Estado");
        tablaTratamiento.setModel(modelo);
    }
    

}
